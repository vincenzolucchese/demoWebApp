/*
 * This file is generated by jOOQ.
*/
package com.vince.boot.demo.webapp.jooq.tables;


import com.vince.boot.demo.webapp.jooq.Demo;
import com.vince.boot.demo.webapp.jooq.Indexes;
import com.vince.boot.demo.webapp.jooq.Keys;
import com.vince.boot.demo.webapp.jooq.tables.records.DRelClientBlobRecord;

import java.sql.Date;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DRelClientBlob extends TableImpl<DRelClientBlobRecord> {

    private static final long serialVersionUID = -1619176572;

    /**
     * The reference instance of <code>demo.d_rel_client_blob</code>
     */
    public static final DRelClientBlob D_REL_CLIENT_BLOB = new DRelClientBlob();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DRelClientBlobRecord> getRecordType() {
        return DRelClientBlobRecord.class;
    }

    /**
     * The column <code>demo.d_rel_client_blob.fk_id_client</code>.
     */
    public final TableField<DRelClientBlobRecord, Long> FK_ID_CLIENT = createField("fk_id_client", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>demo.d_rel_client_blob.fk_id_blob</code>.
     */
    public final TableField<DRelClientBlobRecord, Long> FK_ID_BLOB = createField("fk_id_blob", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>demo.d_rel_client_blob.time_insert</code>.
     */
    public final TableField<DRelClientBlobRecord, Timestamp> TIME_INSERT = createField("time_insert", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>demo.d_rel_client_blob.time_update</code>.
     */
    public final TableField<DRelClientBlobRecord, Timestamp> TIME_UPDATE = createField("time_update", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>demo.d_rel_client_blob.user_insert</code>.
     */
    public final TableField<DRelClientBlobRecord, String> USER_INSERT = createField("user_insert", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>demo.d_rel_client_blob.user_update</code>.
     */
    public final TableField<DRelClientBlobRecord, String> USER_UPDATE = createField("user_update", org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>demo.d_rel_client_blob.id</code>.
     */
    public final TableField<DRelClientBlobRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>demo.d_rel_client_blob.year_refer</code>.
     */
    public final TableField<DRelClientBlobRecord, Date> YEAR_REFER = createField("year_refer", org.jooq.impl.SQLDataType.DATE.nullable(false), this, "");

    /**
     * Create a <code>demo.d_rel_client_blob</code> table reference
     */
    public DRelClientBlob() {
        this(DSL.name("d_rel_client_blob"), null);
    }

    /**
     * Create an aliased <code>demo.d_rel_client_blob</code> table reference
     */
    public DRelClientBlob(String alias) {
        this(DSL.name(alias), D_REL_CLIENT_BLOB);
    }

    /**
     * Create an aliased <code>demo.d_rel_client_blob</code> table reference
     */
    public DRelClientBlob(Name alias) {
        this(alias, D_REL_CLIENT_BLOB);
    }

    private DRelClientBlob(Name alias, Table<DRelClientBlobRecord> aliased) {
        this(alias, aliased, null);
    }

    private DRelClientBlob(Name alias, Table<DRelClientBlobRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Demo.DEMO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.D_REL_CLIENT_BLOB_IX_RELATIONSHIP32, Indexes.D_REL_CLIENT_BLOB_IX_RELATIONSHIP33, Indexes.D_REL_CLIENT_BLOB_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<DRelClientBlobRecord, Long> getIdentity() {
        return Keys.IDENTITY_D_REL_CLIENT_BLOB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<DRelClientBlobRecord> getPrimaryKey() {
        return Keys.KEY_D_REL_CLIENT_BLOB_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DRelClientBlobRecord>> getKeys() {
        return Arrays.<UniqueKey<DRelClientBlobRecord>>asList(Keys.KEY_D_REL_CLIENT_BLOB_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<DRelClientBlobRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<DRelClientBlobRecord, ?>>asList(Keys.RELATIONSHIP32, Keys.RELATIONSHIP33);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DRelClientBlob as(String alias) {
        return new DRelClientBlob(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DRelClientBlob as(Name alias) {
        return new DRelClientBlob(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DRelClientBlob rename(String name) {
        return new DRelClientBlob(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public DRelClientBlob rename(Name name) {
        return new DRelClientBlob(name, null);
    }
}
