/*
 * This file is generated by jOOQ.
*/
package com.vince.boot.demo.webapp.jooq.tables;


import com.vince.boot.demo.webapp.jooq.Demo;
import com.vince.boot.demo.webapp.jooq.tables.records.DUserHRecord;

import java.sql.Date;
import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DUserH extends TableImpl<DUserHRecord> {

    private static final long serialVersionUID = 1377229921;

    /**
     * The reference instance of <code>demo.d_user_h</code>
     */
    public static final DUserH D_USER_H = new DUserH();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DUserHRecord> getRecordType() {
        return DUserHRecord.class;
    }

    /**
     * The column <code>demo.d_user_h.username</code>.
     */
    public final TableField<DUserHRecord, String> USERNAME = createField("username", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>demo.d_user_h.user_insert</code>.
     */
    public final TableField<DUserHRecord, String> USER_INSERT = createField("user_insert", org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>demo.d_user_h.user_update</code>.
     */
    public final TableField<DUserHRecord, String> USER_UPDATE = createField("user_update", org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>demo.d_user_h.time_insert</code>.
     */
    public final TableField<DUserHRecord, Timestamp> TIME_INSERT = createField("time_insert", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>demo.d_user_h.time_update</code>.
     */
    public final TableField<DUserHRecord, Timestamp> TIME_UPDATE = createField("time_update", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>demo.d_user_h.id</code>.
     */
    public final TableField<DUserHRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>demo.d_user_h.password</code>.
     */
    public final TableField<DUserHRecord, String> PASSWORD = createField("password", org.jooq.impl.SQLDataType.VARCHAR(20), this, "");

    /**
     * The column <code>demo.d_user_h.first_name</code>.
     */
    public final TableField<DUserHRecord, String> FIRST_NAME = createField("first_name", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>demo.d_user_h.last_name</code>.
     */
    public final TableField<DUserHRecord, String> LAST_NAME = createField("last_name", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>demo.d_user_h.email</code>.
     */
    public final TableField<DUserHRecord, String> EMAIL = createField("email", org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>demo.d_user_h.fk_id_blob_store</code>.
     */
    public final TableField<DUserHRecord, Long> FK_ID_BLOB_STORE = createField("fk_id_blob_store", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>demo.d_user_h.fk_id_role_user</code>.
     */
    public final TableField<DUserHRecord, Long> FK_ID_ROLE_USER = createField("fk_id_role_user", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>demo.d_user_h.year_refer</code>.
     */
    public final TableField<DUserHRecord, Date> YEAR_REFER = createField("year_refer", org.jooq.impl.SQLDataType.DATE.nullable(false), this, "");

    /**
     * The column <code>demo.d_user_h.crud_type</code>.
     */
    public final TableField<DUserHRecord, String> CRUD_TYPE = createField("crud_type", org.jooq.impl.SQLDataType.CHAR(1).nullable(false), this, "");

    /**
     * Create a <code>demo.d_user_h</code> table reference
     */
    public DUserH() {
        this(DSL.name("d_user_h"), null);
    }

    /**
     * Create an aliased <code>demo.d_user_h</code> table reference
     */
    public DUserH(String alias) {
        this(DSL.name(alias), D_USER_H);
    }

    /**
     * Create an aliased <code>demo.d_user_h</code> table reference
     */
    public DUserH(Name alias) {
        this(alias, D_USER_H);
    }

    private DUserH(Name alias, Table<DUserHRecord> aliased) {
        this(alias, aliased, null);
    }

    private DUserH(Name alias, Table<DUserHRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Demo.DEMO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DUserH as(String alias) {
        return new DUserH(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DUserH as(Name alias) {
        return new DUserH(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DUserH rename(String name) {
        return new DUserH(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public DUserH rename(Name name) {
        return new DUserH(name, null);
    }
}
