/*
 * This file is generated by jOOQ.
*/
package com.vince.boot.demo.webapp.jooq.tables.records;


import com.vince.boot.demo.webapp.jooq.tables.DTypeDocument;

import java.sql.Date;
import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DTypeDocumentRecord extends UpdatableRecordImpl<DTypeDocumentRecord> implements Record8<String, String, Timestamp, Timestamp, Long, String, String, Date> {

    private static final long serialVersionUID = -1077364226;

    /**
     * Setter for <code>demo.d_type_document.user_insert</code>.
     */
    public void setUserInsert(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>demo.d_type_document.user_insert</code>.
     */
    public String getUserInsert() {
        return (String) get(0);
    }

    /**
     * Setter for <code>demo.d_type_document.user_update</code>.
     */
    public void setUserUpdate(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>demo.d_type_document.user_update</code>.
     */
    public String getUserUpdate() {
        return (String) get(1);
    }

    /**
     * Setter for <code>demo.d_type_document.time_insert</code>.
     */
    public void setTimeInsert(Timestamp value) {
        set(2, value);
    }

    /**
     * Getter for <code>demo.d_type_document.time_insert</code>.
     */
    public Timestamp getTimeInsert() {
        return (Timestamp) get(2);
    }

    /**
     * Setter for <code>demo.d_type_document.time_update</code>.
     */
    public void setTimeUpdate(Timestamp value) {
        set(3, value);
    }

    /**
     * Getter for <code>demo.d_type_document.time_update</code>.
     */
    public Timestamp getTimeUpdate() {
        return (Timestamp) get(3);
    }

    /**
     * Setter for <code>demo.d_type_document.id</code>.
     */
    public void setId(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>demo.d_type_document.id</code>.
     */
    public Long getId() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>demo.d_type_document.type_code</code>.
     */
    public void setTypeCode(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>demo.d_type_document.type_code</code>.
     */
    public String getTypeCode() {
        return (String) get(5);
    }

    /**
     * Setter for <code>demo.d_type_document.type_description</code>.
     */
    public void setTypeDescription(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>demo.d_type_document.type_description</code>.
     */
    public String getTypeDescription() {
        return (String) get(6);
    }

    /**
     * Setter for <code>demo.d_type_document.year_refer</code>.
     */
    public void setYearRefer(Date value) {
        set(7, value);
    }

    /**
     * Getter for <code>demo.d_type_document.year_refer</code>.
     */
    public Date getYearRefer() {
        return (Date) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<String, String, Timestamp, Timestamp, Long, String, String, Date> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<String, String, Timestamp, Timestamp, Long, String, String, Date> valuesRow() {
        return (Row8) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return DTypeDocument.D_TYPE_DOCUMENT.USER_INSERT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return DTypeDocument.D_TYPE_DOCUMENT.USER_UPDATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field3() {
        return DTypeDocument.D_TYPE_DOCUMENT.TIME_INSERT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field4() {
        return DTypeDocument.D_TYPE_DOCUMENT.TIME_UPDATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field5() {
        return DTypeDocument.D_TYPE_DOCUMENT.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return DTypeDocument.D_TYPE_DOCUMENT.TYPE_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return DTypeDocument.D_TYPE_DOCUMENT.TYPE_DESCRIPTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field8() {
        return DTypeDocument.D_TYPE_DOCUMENT.YEAR_REFER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getUserInsert();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getUserUpdate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component3() {
        return getTimeInsert();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component4() {
        return getTimeUpdate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component5() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getTypeCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getTypeDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date component8() {
        return getYearRefer();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getUserInsert();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getUserUpdate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value3() {
        return getTimeInsert();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value4() {
        return getTimeUpdate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value5() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getTypeCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getTypeDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value8() {
        return getYearRefer();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DTypeDocumentRecord value1(String value) {
        setUserInsert(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DTypeDocumentRecord value2(String value) {
        setUserUpdate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DTypeDocumentRecord value3(Timestamp value) {
        setTimeInsert(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DTypeDocumentRecord value4(Timestamp value) {
        setTimeUpdate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DTypeDocumentRecord value5(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DTypeDocumentRecord value6(String value) {
        setTypeCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DTypeDocumentRecord value7(String value) {
        setTypeDescription(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DTypeDocumentRecord value8(Date value) {
        setYearRefer(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DTypeDocumentRecord values(String value1, String value2, Timestamp value3, Timestamp value4, Long value5, String value6, String value7, Date value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DTypeDocumentRecord
     */
    public DTypeDocumentRecord() {
        super(DTypeDocument.D_TYPE_DOCUMENT);
    }

    /**
     * Create a detached, initialised DTypeDocumentRecord
     */
    public DTypeDocumentRecord(String userInsert, String userUpdate, Timestamp timeInsert, Timestamp timeUpdate, Long id, String typeCode, String typeDescription, Date yearRefer) {
        super(DTypeDocument.D_TYPE_DOCUMENT);

        set(0, userInsert);
        set(1, userUpdate);
        set(2, timeInsert);
        set(3, timeUpdate);
        set(4, id);
        set(5, typeCode);
        set(6, typeDescription);
        set(7, yearRefer);
    }
}
