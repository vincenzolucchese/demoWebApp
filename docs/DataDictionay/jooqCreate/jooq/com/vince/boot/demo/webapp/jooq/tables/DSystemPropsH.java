/*
 * This file is generated by jOOQ.
*/
package com.vince.boot.demo.webapp.jooq.tables;


import com.vince.boot.demo.webapp.jooq.Demo;
import com.vince.boot.demo.webapp.jooq.Indexes;
import com.vince.boot.demo.webapp.jooq.Keys;
import com.vince.boot.demo.webapp.jooq.tables.records.DSystemPropsHRecord;

import java.sql.Date;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DSystemPropsH extends TableImpl<DSystemPropsHRecord> {

    private static final long serialVersionUID = 400981006;

    /**
     * The reference instance of <code>demo.d_system_props_h</code>
     */
    public static final DSystemPropsH D_SYSTEM_PROPS_H = new DSystemPropsH();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DSystemPropsHRecord> getRecordType() {
        return DSystemPropsHRecord.class;
    }

    /**
     * The column <code>demo.d_system_props_h.user_insert</code>.
     */
    public final TableField<DSystemPropsHRecord, String> USER_INSERT = createField("user_insert", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>demo.d_system_props_h.user_update</code>.
     */
    public final TableField<DSystemPropsHRecord, String> USER_UPDATE = createField("user_update", org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>demo.d_system_props_h.time_insert</code>.
     */
    public final TableField<DSystemPropsHRecord, Timestamp> TIME_INSERT = createField("time_insert", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>demo.d_system_props_h.time_update</code>.
     */
    public final TableField<DSystemPropsHRecord, Timestamp> TIME_UPDATE = createField("time_update", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>demo.d_system_props_h.id</code>.
     */
    public final TableField<DSystemPropsHRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>demo.d_system_props_h.year_refer</code>.
     */
    public final TableField<DSystemPropsHRecord, Date> YEAR_REFER = createField("year_refer", org.jooq.impl.SQLDataType.DATE.nullable(false), this, "");

    /**
     * The column <code>demo.d_system_props_h.key_prop</code>.
     */
    public final TableField<DSystemPropsHRecord, String> KEY_PROP = createField("key_prop", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>demo.d_system_props_h.value_prop</code>.
     */
    public final TableField<DSystemPropsHRecord, String> VALUE_PROP = createField("value_prop", org.jooq.impl.SQLDataType.VARCHAR(200).nullable(false), this, "");

    /**
     * Create a <code>demo.d_system_props_h</code> table reference
     */
    public DSystemPropsH() {
        this(DSL.name("d_system_props_h"), null);
    }

    /**
     * Create an aliased <code>demo.d_system_props_h</code> table reference
     */
    public DSystemPropsH(String alias) {
        this(DSL.name(alias), D_SYSTEM_PROPS_H);
    }

    /**
     * Create an aliased <code>demo.d_system_props_h</code> table reference
     */
    public DSystemPropsH(Name alias) {
        this(alias, D_SYSTEM_PROPS_H);
    }

    private DSystemPropsH(Name alias, Table<DSystemPropsHRecord> aliased) {
        this(alias, aliased, null);
    }

    private DSystemPropsH(Name alias, Table<DSystemPropsHRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Demo.DEMO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.D_SYSTEM_PROPS_H_KEY_PROP, Indexes.D_SYSTEM_PROPS_H_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<DSystemPropsHRecord> getPrimaryKey() {
        return Keys.KEY_D_SYSTEM_PROPS_H_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DSystemPropsHRecord>> getKeys() {
        return Arrays.<UniqueKey<DSystemPropsHRecord>>asList(Keys.KEY_D_SYSTEM_PROPS_H_PRIMARY, Keys.KEY_D_SYSTEM_PROPS_H_KEY_PROP);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DSystemPropsH as(String alias) {
        return new DSystemPropsH(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DSystemPropsH as(Name alias) {
        return new DSystemPropsH(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DSystemPropsH rename(String name) {
        return new DSystemPropsH(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public DSystemPropsH rename(Name name) {
        return new DSystemPropsH(name, null);
    }
}
