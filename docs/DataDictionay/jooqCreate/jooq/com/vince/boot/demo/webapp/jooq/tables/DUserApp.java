/*
 * This file is generated by jOOQ.
*/
package com.vince.boot.demo.webapp.jooq.tables;


import com.vince.boot.demo.webapp.jooq.Demo;
import com.vince.boot.demo.webapp.jooq.Indexes;
import com.vince.boot.demo.webapp.jooq.Keys;
import com.vince.boot.demo.webapp.jooq.tables.records.DUserAppRecord;

import java.sql.Date;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DUserApp extends TableImpl<DUserAppRecord> {

    private static final long serialVersionUID = 856202438;

    /**
     * The reference instance of <code>demo.d_user_app</code>
     */
    public static final DUserApp D_USER_APP = new DUserApp();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DUserAppRecord> getRecordType() {
        return DUserAppRecord.class;
    }

    /**
     * The column <code>demo.d_user_app.username</code>.
     */
    public final TableField<DUserAppRecord, String> USERNAME = createField("username", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>demo.d_user_app.user_insert</code>.
     */
    public final TableField<DUserAppRecord, String> USER_INSERT = createField("user_insert", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>demo.d_user_app.user_update</code>.
     */
    public final TableField<DUserAppRecord, String> USER_UPDATE = createField("user_update", org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>demo.d_user_app.time_insert</code>.
     */
    public final TableField<DUserAppRecord, Timestamp> TIME_INSERT = createField("time_insert", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>demo.d_user_app.time_update</code>.
     */
    public final TableField<DUserAppRecord, Timestamp> TIME_UPDATE = createField("time_update", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>demo.d_user_app.id</code>.
     */
    public final TableField<DUserAppRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>demo.d_user_app.password</code>.
     */
    public final TableField<DUserAppRecord, String> PASSWORD = createField("password", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>demo.d_user_app.first_name</code>.
     */
    public final TableField<DUserAppRecord, String> FIRST_NAME = createField("first_name", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * The column <code>demo.d_user_app.last_name</code>.
     */
    public final TableField<DUserAppRecord, String> LAST_NAME = createField("last_name", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * The column <code>demo.d_user_app.email</code>.
     */
    public final TableField<DUserAppRecord, String> EMAIL = createField("email", org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>demo.d_user_app.fk_id_blob_store</code>.
     */
    public final TableField<DUserAppRecord, Long> FK_ID_BLOB_STORE = createField("fk_id_blob_store", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>demo.d_user_app.fk_id_role_user</code>.
     */
    public final TableField<DUserAppRecord, Long> FK_ID_ROLE_USER = createField("fk_id_role_user", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>demo.d_user_app.year_refer</code>.
     */
    public final TableField<DUserAppRecord, Date> YEAR_REFER = createField("year_refer", org.jooq.impl.SQLDataType.DATE.nullable(false), this, "");

    /**
     * The column <code>demo.d_user_app.address</code>.
     */
    public final TableField<DUserAppRecord, String> ADDRESS = createField("address", org.jooq.impl.SQLDataType.VARCHAR(2000), this, "");

    /**
     * Create a <code>demo.d_user_app</code> table reference
     */
    public DUserApp() {
        this(DSL.name("d_user_app"), null);
    }

    /**
     * Create an aliased <code>demo.d_user_app</code> table reference
     */
    public DUserApp(String alias) {
        this(DSL.name(alias), D_USER_APP);
    }

    /**
     * Create an aliased <code>demo.d_user_app</code> table reference
     */
    public DUserApp(Name alias) {
        this(alias, D_USER_APP);
    }

    private DUserApp(Name alias, Table<DUserAppRecord> aliased) {
        this(alias, aliased, null);
    }

    private DUserApp(Name alias, Table<DUserAppRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Demo.DEMO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.D_USER_APP_IX_RELATIONSHIP6, Indexes.D_USER_APP_PRIMARY, Indexes.D_USER_APP_USERNAME);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<DUserAppRecord, Long> getIdentity() {
        return Keys.IDENTITY_D_USER_APP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<DUserAppRecord> getPrimaryKey() {
        return Keys.KEY_D_USER_APP_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DUserAppRecord>> getKeys() {
        return Arrays.<UniqueKey<DUserAppRecord>>asList(Keys.KEY_D_USER_APP_USERNAME, Keys.KEY_D_USER_APP_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<DUserAppRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<DUserAppRecord, ?>>asList(Keys.RELATIONSHIP6);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DUserApp as(String alias) {
        return new DUserApp(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DUserApp as(Name alias) {
        return new DUserApp(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DUserApp rename(String name) {
        return new DUserApp(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public DUserApp rename(Name name) {
        return new DUserApp(name, null);
    }
}
