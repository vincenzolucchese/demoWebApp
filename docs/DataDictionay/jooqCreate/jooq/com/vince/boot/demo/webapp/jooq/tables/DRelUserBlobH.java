/*
 * This file is generated by jOOQ.
*/
package com.vince.boot.demo.webapp.jooq.tables;


import com.vince.boot.demo.webapp.jooq.Demo;
import com.vince.boot.demo.webapp.jooq.Indexes;
import com.vince.boot.demo.webapp.jooq.tables.records.DRelUserBlobHRecord;

import java.sql.Date;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DRelUserBlobH extends TableImpl<DRelUserBlobHRecord> {

    private static final long serialVersionUID = 581474964;

    /**
     * The reference instance of <code>demo.d_rel_user_blob_h</code>
     */
    public static final DRelUserBlobH D_REL_USER_BLOB_H = new DRelUserBlobH();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DRelUserBlobHRecord> getRecordType() {
        return DRelUserBlobHRecord.class;
    }

    /**
     * The column <code>demo.d_rel_user_blob_h.fk_id_user</code>.
     */
    public final TableField<DRelUserBlobHRecord, Long> FK_ID_USER = createField("fk_id_user", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>demo.d_rel_user_blob_h.fk_id_blob</code>.
     */
    public final TableField<DRelUserBlobHRecord, Long> FK_ID_BLOB = createField("fk_id_blob", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>demo.d_rel_user_blob_h.id</code>.
     */
    public final TableField<DRelUserBlobHRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>demo.d_rel_user_blob_h.user_insert</code>.
     */
    public final TableField<DRelUserBlobHRecord, byte[]> USER_INSERT = createField("user_insert", org.jooq.impl.SQLDataType.VARBINARY(100), this, "");

    /**
     * The column <code>demo.d_rel_user_blob_h.user_update</code>.
     */
    public final TableField<DRelUserBlobHRecord, String> USER_UPDATE = createField("user_update", org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>demo.d_rel_user_blob_h.time_update</code>.
     */
    public final TableField<DRelUserBlobHRecord, Timestamp> TIME_UPDATE = createField("time_update", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>demo.d_rel_user_blob_h.time_insert</code>.
     */
    public final TableField<DRelUserBlobHRecord, Timestamp> TIME_INSERT = createField("time_insert", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>demo.d_rel_user_blob_h.year_refer</code>.
     */
    public final TableField<DRelUserBlobHRecord, Date> YEAR_REFER = createField("year_refer", org.jooq.impl.SQLDataType.DATE.nullable(false), this, "");

    /**
     * The column <code>demo.d_rel_user_blob_h.crud_type</code>.
     */
    public final TableField<DRelUserBlobHRecord, String> CRUD_TYPE = createField("crud_type", org.jooq.impl.SQLDataType.CHAR(1).nullable(false), this, "");

    /**
     * Create a <code>demo.d_rel_user_blob_h</code> table reference
     */
    public DRelUserBlobH() {
        this(DSL.name("d_rel_user_blob_h"), null);
    }

    /**
     * Create an aliased <code>demo.d_rel_user_blob_h</code> table reference
     */
    public DRelUserBlobH(String alias) {
        this(DSL.name(alias), D_REL_USER_BLOB_H);
    }

    /**
     * Create an aliased <code>demo.d_rel_user_blob_h</code> table reference
     */
    public DRelUserBlobH(Name alias) {
        this(alias, D_REL_USER_BLOB_H);
    }

    private DRelUserBlobH(Name alias, Table<DRelUserBlobHRecord> aliased) {
        this(alias, aliased, null);
    }

    private DRelUserBlobH(Name alias, Table<DRelUserBlobHRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Demo.DEMO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.D_REL_USER_BLOB_H_IX_RELATIONSHIP20, Indexes.D_REL_USER_BLOB_H_IX_RELATIONSHIP22);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DRelUserBlobH as(String alias) {
        return new DRelUserBlobH(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DRelUserBlobH as(Name alias) {
        return new DRelUserBlobH(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DRelUserBlobH rename(String name) {
        return new DRelUserBlobH(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public DRelUserBlobH rename(Name name) {
        return new DRelUserBlobH(name, null);
    }
}
