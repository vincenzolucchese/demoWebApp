package com.vince.boot.demo.webapp.entity;
// Generated 4-ott-2017 15.34.34 by Hibernate Tools 3.2.2.GA


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * DTypeDocument generated by hbm2java
 */
@Entity
@Table(name="d_type_document"
    ,catalog="demo"
    , uniqueConstraints = @UniqueConstraint(columnNames="type_code") 
)
public class DTypeDocument  implements java.io.Serializable {


     private long id;
     private String userInsert;
     private String userUpdate;
     private Date timeInsert;
     private Date timeUpdate;
     private String typeCode;
     private String typeDescription;
     private Date yearRefer;
     private Set<DBlobStore> DBlobStores = new HashSet<DBlobStore>(0);

    public DTypeDocument() {
    }

	
    public DTypeDocument(long id, String userInsert, Date timeInsert, String typeCode, String typeDescription, Date yearRefer) {
        this.id = id;
        this.userInsert = userInsert;
        this.timeInsert = timeInsert;
        this.typeCode = typeCode;
        this.typeDescription = typeDescription;
        this.yearRefer = yearRefer;
    }
    public DTypeDocument(long id, String userInsert, String userUpdate, Date timeInsert, Date timeUpdate, String typeCode, String typeDescription, Date yearRefer, Set<DBlobStore> DBlobStores) {
       this.id = id;
       this.userInsert = userInsert;
       this.userUpdate = userUpdate;
       this.timeInsert = timeInsert;
       this.timeUpdate = timeUpdate;
       this.typeCode = typeCode;
       this.typeDescription = typeDescription;
       this.yearRefer = yearRefer;
       this.DBlobStores = DBlobStores;
    }
   
     @Id 
    
    @Column(name="id", unique=true, nullable=false)
    public long getId() {
        return this.id;
    }
    
    public void setId(long id) {
        this.id = id;
    }
    
    @Column(name="user_insert", nullable=false, length=100)
    public String getUserInsert() {
        return this.userInsert;
    }
    
    public void setUserInsert(String userInsert) {
        this.userInsert = userInsert;
    }
    
    @Column(name="user_update", length=100)
    public String getUserUpdate() {
        return this.userUpdate;
    }
    
    public void setUserUpdate(String userUpdate) {
        this.userUpdate = userUpdate;
    }
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="time_insert", nullable=false, length=19)
    public Date getTimeInsert() {
        return this.timeInsert;
    }
    
    public void setTimeInsert(Date timeInsert) {
        this.timeInsert = timeInsert;
    }
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="time_update", length=19)
    public Date getTimeUpdate() {
        return this.timeUpdate;
    }
    
    public void setTimeUpdate(Date timeUpdate) {
        this.timeUpdate = timeUpdate;
    }
    
    @Column(name="type_code", unique=true, nullable=false, length=20)
    public String getTypeCode() {
        return this.typeCode;
    }
    
    public void setTypeCode(String typeCode) {
        this.typeCode = typeCode;
    }
    
    @Column(name="type_description", nullable=false, length=100)
    public String getTypeDescription() {
        return this.typeDescription;
    }
    
    public void setTypeDescription(String typeDescription) {
        this.typeDescription = typeDescription;
    }
    @Temporal(TemporalType.DATE)
    @Column(name="year_refer", nullable=false, length=10)
    public Date getYearRefer() {
        return this.yearRefer;
    }
    
    public void setYearRefer(Date yearRefer) {
        this.yearRefer = yearRefer;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="DTypeDocument")
    public Set<DBlobStore> getDBlobStores() {
        return this.DBlobStores;
    }
    
    public void setDBlobStores(Set<DBlobStore> DBlobStores) {
        this.DBlobStores = DBlobStores;
    }




}


