package com.vince.boot.demo.webapp.be.entity;
// Generated 4-ott-2017 15.34.34 by Hibernate Tools 3.2.2.GA

import java.util.Date;

import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import com.vince.boot.demo.webapp.be.service.impl.CommonAppRepositoryImpl;

/**
 * DRelUserBlob generated by hbm2java
 */
@Entity
@Table(name = "d_rel_user_blob")
public class RelUserBlob extends BaseEntity {

	private static final long serialVersionUID = 1L;
	private BlobStore blobStore;
	private UserApp userApp;

	public RelUserBlob() {
	}
	
	public RelUserBlob(Long id) {
		super.id = id;
	}

	/**
	 * costructor and managing null pointer for time e user inser
	 * @param orderJob
	 * @param blobStore
	 */
	public RelUserBlob(UserApp userApp, BlobStore blobStore) {
		setUserApp(userApp);
		setBlobStore(blobStore);
		if(this.isNew()) {
			setTimeInsert(userApp.getTimeInsert()!=null ? userApp.getTimeInsert() : new Date());
			setUserInsert(userApp.getUserInsert()!=null ? userApp.getUserInsert() : CommonAppRepositoryImpl.USER_SYSTEM);
			setYearRefer(userApp.getYearRefer()!=null ? userApp.getYearRefer() : new Date());
		}else {
			setTimeUpdate(userApp.getTimeUpdate());
			setUserUpdate(userApp.getUserUpdate());
		}
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "fk_id_blob", nullable = false)
	public BlobStore getBlobStore() {
		return this.blobStore;
	}

	public void setBlobStore(BlobStore blobStore) {
		this.blobStore = blobStore;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "fk_id_user", nullable = false)
	public UserApp getUserApp() {
		return this.userApp;
	}

	public void setUserApp(UserApp userApp) {
		this.userApp = userApp;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = super.hashCode();
		result = prime * result + ((blobStore == null) ? 0 : blobStore.hashCode());
		result = prime * result + ((userApp == null) ? 0 : userApp.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (!super.equals(obj))
			return false;
		if (getClass() != obj.getClass())
			return false;
		RelUserBlob other = (RelUserBlob) obj;
		if (blobStore == null) {
			if (other.blobStore != null)
				return false;
		} else if (!blobStore.equals(other.blobStore))
			return false;
		if (userApp == null) {
			if (other.userApp != null)
				return false;
		} else if (!userApp.equals(other.userApp))
			return false;
		return true;
	}

}
