package com.vince.boot.demo.webapp.entity;
// Generated 4-ott-2017 15.34.34 by Hibernate Tools 3.2.2.GA

import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * DBlobStore generated by hbm2java
 */
@Entity
@Table(name = "d_blob_store")
public class DBlobStore extends BaseEntity {

	private static final long serialVersionUID = 1L;
	private DTypeDocument DTypeDocument;

	private String filename;
	private char flagActive;
	private byte[] blobData;
	private String description;
	private String contentType;

	private Set<DRelOrderBlob> DRelOrderBlobs = new HashSet<DRelOrderBlob>(0);
	private Set<DRelUserBlob> DRelUserBlobs = new HashSet<DRelUserBlob>(0);
	private Set<DRelClientBlob> DRelClientBlobs = new HashSet<DRelClientBlob>(0);

	public DBlobStore() {
	}


	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "fk_id_type", nullable = false)
	public DTypeDocument getDTypeDocument() {
		return this.DTypeDocument;
	}

	public void setDTypeDocument(DTypeDocument DTypeDocument) {
		this.DTypeDocument = DTypeDocument;
	}

	@Column(name = "filename", nullable = false, length = 200)
	public String getFilename() {
		return this.filename;
	}

	public void setFilename(String filename) {
		this.filename = filename;
	}

	@Column(name = "flag_active", nullable = false, length = 1)
	public char getFlagActive() {
		return this.flagActive;
	}

	public void setFlagActive(char flagActive) {
		this.flagActive = flagActive;
	}

	@Column(name = "blob_data", nullable = false)
	public byte[] getBlobData() {
		return this.blobData;
	}

	public void setBlobData(byte[] blobData) {
		this.blobData = blobData;
	}

	@Column(name = "description", length = 200)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "content_type", nullable = false, length = 100)
	public String getContentType() {
		return this.contentType;
	}

	public void setContentType(String contentType) {
		this.contentType = contentType;
	}

	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "DBlobStore")
	public Set<DRelOrderBlob> getDRelOrderBlobs() {
		return this.DRelOrderBlobs;
	}

	public void setDRelOrderBlobs(Set<DRelOrderBlob> DRelOrderBlobs) {
		this.DRelOrderBlobs = DRelOrderBlobs;
	}

	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "DBlobStore")
	public Set<DRelUserBlob> getDRelUserBlobs() {
		return this.DRelUserBlobs;
	}

	public void setDRelUserBlobs(Set<DRelUserBlob> DRelUserBlobs) {
		this.DRelUserBlobs = DRelUserBlobs;
	}

	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "DBlobStore")
	public Set<DRelClientBlob> getDRelClientBlobs() {
		return this.DRelClientBlobs;
	}

	public void setDRelClientBlobs(Set<DRelClientBlob> DRelClientBlobs) {
		this.DRelClientBlobs = DRelClientBlobs;
	}

}
