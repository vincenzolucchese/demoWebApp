package com.vince.boot.demo.webapp.entity;
// Generated 28-ago-2017 16.36.04 by Hibernate Tools 5.2.3.Final

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Order generated by hbm2java
 */
@Entity
@Table(name = "d_order_job")
public class OrderJob extends BaseEntity {

	private static final long serialVersionUID = 1L;

	private ClientApp client;
	private String notes;
	private String codeOrder;
	private Date dataScadenza;
	private BigDecimal preAmount;
	private BigDecimal finalAmount;
	private Boolean flagActive;
	private String address;
	private Set<RelOrderBlob> relOrderBlobs = new HashSet<RelOrderBlob>(0);

	public OrderJob() {
	}

	public OrderJob(Long id) {
		this.id=id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "fk_id_client", nullable = false)
	public ClientApp getClient() {
		return this.client;
	}

	public void setClient(ClientApp client) {
		this.client = client;
	}

	@Column(name = "notes", nullable = false, length = 2000)
	public String getNotes() {
		return this.notes;
	}

	public void setNotes(String notes) {
		this.notes = notes;
	}

	@Column(name = "code_order", length = 20)
	public String getCodeOrder() {
		return this.codeOrder;
	}

	public void setCodeOrder(String codeOrder) {
		this.codeOrder = codeOrder;
	}
	
	@Column(name = "address", nullable = false, length = 2000)
	public String getAddress() {
		return this.address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "data_scadenza", length = 19)
	public Date getDataScadenza() {
		return this.dataScadenza;
	}

	public void setDataScadenza(Date dataScadenza) {
		this.dataScadenza = dataScadenza;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "order")
	public Set<RelOrderBlob> getRelOrderBlobs() {
		return this.relOrderBlobs;
	}

	public void setRelOrderBlobs(Set<RelOrderBlob> relOrderBlobs) {
		this.relOrderBlobs = relOrderBlobs;
	}

	@Column(name = "pre_amount", precision = 10, scale = 2)
	public BigDecimal getPreAmount() {
		return preAmount;
	}

	public void setPreAmount(BigDecimal preAmount) {
		this.preAmount = preAmount;
	}

	@Column(name = "final_amount", precision = 10, scale = 2)
	public BigDecimal getFinalAmount() {
		return finalAmount;
	}

	public void setFinalAmount(BigDecimal finalAmount) {
		this.finalAmount = finalAmount;
	}

	@Column(name = "flag_active", length = 1)
	public Boolean getFlagActive() {
		return flagActive;
	}

	public void setFlagActive(Boolean flagActive) {
		this.flagActive = flagActive;
	}

}
