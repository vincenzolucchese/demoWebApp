<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.vince.boot.demo</groupId>
	<artifactId>demoWebApp</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>demoWebApp</name>
	<description>Demo project for Spring Boot</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.7.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<vaadin.version>8.1.0</vaadin.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-cache</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-freemarker</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jooq</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-mobile</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-spring-boot-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>
		
		
		
		<!-- MANUALLY '...A MANO...' -->
		<dependency>
	        <groupId>com.querydsl</groupId>
	        <artifactId>querydsl-core</artifactId>
	    </dependency>	
         <dependency>
             <groupId>com.querydsl</groupId>
             <artifactId>querydsl-apt</artifactId>
         </dependency>	
	    <dependency>
	        <groupId>com.querydsl</groupId>
	        <artifactId>querydsl-jpa</artifactId>
	    </dependency> 	
		<dependency>
		    <groupId>org.springframework.security</groupId>
		    <artifactId>spring-security-taglibs</artifactId>
		</dependency>
		<!-- END: MANUALLY '...A MANO...' -->
		
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.vaadin</groupId>
				<artifactId>vaadin-bom</artifactId>
				<version>${vaadin.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<reporting>	
		<plugins>			

	    </plugins>
	</reporting>
	
	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			
			<!-- BUILD GENERATE ENTITIES -->
			<plugin>
		       <groupId>org.codehaus.mojo</groupId>
		       <artifactId>hibernate3-maven-plugin</artifactId>
		       <version>2.2</version>
		         <configuration>
		           <components>
		             <component>
		               <name>hbm2hbmxml</name>
		               <implementation>jdbcconfiguration</implementation>
		               <outputDirectory>target/generated-resources/hibernate3</outputDirectory>
		             </component>
		             <component>
		               <name>hbm2java</name>
		               <implementation>jdbcconfiguration</implementation>
		               <outputDirectory>target/generated-sources/hibernate3</outputDirectory>
		             </component>
		           </components>
		           <componentProperties>
		             <revengfile>src/main/resources/reveng.xml</revengfile>
		             <propertyfile>src/main/resources/hibernate.properties</propertyfile>
		             <packagename>com.vince.boot.demo.webapp.entity</packagename>
		             <jdk5>true</jdk5>
		             <ejb3>true</ejb3>
		           </componentProperties>
		         </configuration>
		         <dependencies>
		           <dependency>
		             <groupId>cglib</groupId>
		             <artifactId>cglib-nodep</artifactId>
		             <version>2.2.2</version>
		           </dependency>
			      <dependency>
			        <groupId>mysql</groupId>
			        <artifactId>mysql-connector-java</artifactId>
			        <version>5.1.44</version>
			      </dependency>
		         </dependencies>
		       </plugin>
		    <!--END: BUILD GENERATE ENTITIES -->
		       
	        <!-- BUILD GENERATE JOOQ -->
			<plugin>			
			  <!-- Specify the maven code generator plugin -->
			  <!-- Use org.jooq            for the Open Source Edition
			           org.jooq.pro        for commercial editions, 
			           org.jooq.pro-java-6 for commercial editions with Java 6 support,
			           org.jooq.trial      for the free trial edition 
			         
			       Note: Only the Open Source Edition is hosted on Maven Central. 
			             Import the others manually from your distribution -->
			  <groupId>org.jooq</groupId>
			  <artifactId>jooq-codegen-maven</artifactId>
			  <version>3.10.0</version>				
			  <!-- The plugin should hook into the generate goal -->
			  <executions>
			    <execution>
			      <goals>
			        <goal>generate</goal>
			      </goals>
			    </execution>
			  </executions>				
			  <!-- Manage the plugin's dependency. In this example, we'll use a PostgreSQL database -->
			  <dependencies>
			      <dependency>
			        <groupId>mysql</groupId>
			        <artifactId>mysql-connector-java</artifactId>
			        <version>5.1.44</version>
			      </dependency>
			  </dependencies>				
			  <!-- Specify the plugin configuration.
			       The configuration format is the same as for the standalone code generator -->
			  <configuration>
			
			    <!-- JDBC connection parameters -->
			    <jdbc>
			      <driver>com.mysql.jdbc.Driver</driver>
			      <url>jdbc:mysql://localhost/demo</url>
			      <user>root</user>
			      <password></password>
			    </jdbc>
			
			    <!-- Generator parameters -->
			    <generator>
			      <database>
			        <name>org.jooq.util.mysql.MySQLDatabase</name>
			        <includes>.*</includes>
			        <excludes></excludes>
			        <!-- In case your database supports catalogs, e.g. SQL Server:
			        <inputCatalog>public</inputCatalog>
			          -->
			        <inputSchema>demo</inputSchema>
			      </database>
			      <target>
			        <packageName>com.vince.boot.demo.webapp.jooq</packageName>
			        <directory>target/generated-sources/jooq</directory>
			      </target>
			    </generator>
			  </configuration>
			</plugin>	
			<!-- END: BUILD GENERATE JOOQ -->	
				
		    <!-- BUILD GENERATE Q_ENTITY 
			<plugin>
	               <groupId>com.mysema.maven</groupId>
	               <artifactId>apt-maven-plugin</artifactId>
	               <version>1.1.3</version>
	               <executions>
	                   <execution>
	                       <goals>
	                           <goal>process</goal>
	                       </goals>
	                       <configuration>
	                           <outputDirectory>target/generated-sources/querydsl</outputDirectory>
	                           <processor>com.querydsl.apt.jpa.JPAAnnotationProcessor</processor>
	                       </configuration>
	                   </execution>
	               </executions>
	               <dependencies>
	                   <dependency>
	                       <groupId>com.mysema.querydsl</groupId>
	                       <artifactId>querydsl-apt</artifactId>
	                       <version>3.7.4</version>
	                   </dependency>
	               </dependencies>
	           </plugin>
	           -->
		    <!-- END: BUILD GENERATE Q_ENTITY -->
	    			
		</plugins>
	</build>

	<repositories>
		<repository>
			<id>spring-snapshots</id>
			<name>Spring Snapshots</name>
			<url>https://repo.spring.io/snapshot</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>spring-snapshots</id>
			<name>Spring Snapshots</name>
			<url>https://repo.spring.io/snapshot</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>
		<pluginRepository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>


</project>
